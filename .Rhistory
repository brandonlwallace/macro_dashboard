speech <- paste(lines[,:],collapse=" ")
speech <- paste(lines[1,],collapse=" ")
speech <- paste(lines[],collapse=" ")
speech
install.packages("stopwords")
library(stopwords)
speech <- tolower(speech)
stopword.logical <- speech %in% stopwords("en")
paste(speech[stopword.logical==FALSE],collapse=" ")
library(stopwords)
speech <- tolower(speech)
stopword.logical <- speech %in% stopwords("en")
updated <- paste(speech[stopword.logical==FALSE],collapse=" ")
cleaned <- gsub('[[:punct:] ]+',' ',updated)
cleaned
sort(table(unlist(cleaned, decreasing=TRUE)[1:20]
sort(table(unlist(cleaned, decreasing=TRUE)))[1:20]
sort(table(unlist(cleaned)))[1:20]
sort(table(cleaned)))[1:20]
sort(table(cleaned))[1:20]
sort(table(unlist(strsplit(cleaned,split="[ !\\.]"))),decreasing=TRUE)[1:20]
out <- strsplit(lines, split = " ")
empty = c()
for (i in 1: length(out) ){
filled = append(empty, length(out[[i]])) }
table(filled)
lines = readLines("http://www.stat.cmu.edu/~pfreeman/biden_2021.txt")
length(lines)
out <- gregexpr(" ",lines)
total = 0
for (ii in 1: length(lines) ){
total = total+length(out[[ii]])
}
total
out <- strsplit(lines, split = " ")
empty = c()
for (i in 1: length(out) ){
filled = append(empty, length(out[[i]])) }
filled
length(lines)
nchar(lines)
length(lines)
sum(nchar(lines))
out <- gregexpr(" ",lines)
total = 0
for (ii in 1: length(1) ){
total = total+length(out[[ii]])
}
total
out <- gregexpr(" ",lines)
total = 0
for (ii in 1: length(lines) ){
total = total+length(out[[ii]])
}
total
out <- strsplit(lines, split = " ")
empty = c()
for (i in 1: length(1) ){
filled = append(empty, length(out[[i]])) }
filled
library(stopwords)
speech <- tolower(speech)
stopword.logical <- speech %in% stopwords("en")
updated <- paste(speech[stopword.logical==FALSE],collapse=" ")
cleaned <- gsub('[[:punct:] ]+',' ',updated)
updated
library(stopwords)
speech <- tolower(speech)
w <- which(nchar(speech) == 0)
sppech <- speech[-w]
stopword.logical <- speech %in% stopwords("en")
updated <- paste(speech[stopword.logical==FALSE],collapse=" ")
cleaned <- gsub('[[:punct:] ]+',' ',updated)
cleaned
library(stopwords)
speech <- tolower(speech)
w <- which(nchar(speech) == 0)
sppech <- speech[-w]
stopword.logical <- speech %in% stopwords("en")
paste(speech[stopword.logical==FALSE],collapse=" ")
cleaned <- gsub('[[:punct:] ]+',' ',speech)
cleaned
library(stopwords)
speech <- tolower(speech)
w <- which(nchar(speech) == 0)
sppech <- speech[-w]
stopword.logical <- speech %in% stopwords("en")
paste(speech[stopword.logical==FALSE],collapse=" ")
lines = readLines("http://www.stat.cmu.edu/~pfreeman/biden_2021.txt")
length(lines)
sum(nchar(lines))
out <- gregexpr(" ",lines)
total = 0
for (ii in 1: length(lines) ){
total = total+length(out[[ii]])
}
total
out <- strsplit(lines, split = " ")
empty = c()
for (i in 1: length(1) ){
filled = append(empty, length(out[[i]])) }
filled
america <- grepl("America", lines)
sum(america)
speech <- paste(lines[],collapse=" ")
speech
library(stopwords)
speech <- tolower(speech)
w <- which(nchar(speech) == 0)
sppech <- speech[-w]
stopword.logical <- speech %in% stopwords("en")
paste(speech[stopword.logical==FALSE],collapse=" ")
library(stopwords)
speech <- tolower(speech)
w <- which(nchar(speech) == 0)
sppech <- speech[-w]
stopword.logical <- speech %in% stopwords("en")
paste(speech[stopword.logical==TRUE],collapse=" ")
library(stopwords)
speech <- tolower(speech)
w <- which(nchar(speech) == 0)
sppech <- speech[-w]
stopword.logical <- speech %in% stopwords("en")
paste(speech[stopword.logical==FALSE],collapse=" ")
stopword.logical
library(stopwords)
speech <- tolower(unlist(strsplit(lines,split="[ ,!\\.]")))
w <- which(nchar(speech) == 0)
speech <- speech[-w]
stopword.logical <- speech %in% stopwords("en")
cleaned <- paste(speech[stopword.logical==FALSE],collapse=" ")
library(stopwords)
speech <- tolower(unlist(strsplit(lines,split="[ ,!\\.]")))
w <- which(nchar(speech) == 0)
speech <- speech[-w]
stopword.logical <- speech %in% stopwords("en")
cleaned <- paste(speech[stopword.logical==FALSE],collapse=" ")
cleaned
sort(table(unlist(strsplit(cleaned,split="[ !\\.]"))),decreasing=TRUE)[1:20]
digits <- grepl("[0-9]", cleaned)
sum(digits)
digits <- grepl([0-9], cleaned)
digits <- grepl("0-9", cleaned)
sum(digits)
nchar("[0-9]", cleaned)
digits <- grepl("[0-9]", cleaned)
sum(cleaned)
digits <- grepl("[0-9]", cleaned)
sum(digits)
digits <- grepl("[0-9]", cleaned)
sum(digits)
digits
digits <- unlist(strsplit(my_string, split = " "))
digits <- unlist(strsplit(cleaned, split = " "))
digits <- grepl("[0-9]", digits)
sum(digits)
digits <- unlist(strsplit(cleaned, split = " "))
digits <- grepl("[0-9]", digits)
sum(digits)
digits
digits <- unlist(strsplit(cleaned, split = ""))
digits <- grepl("[0-9]", digits)
sum(digits)
digits <- unlist(strsplit(cleaned, split = ""))
digits <- grepl("[0-9]", digits)
sum(digits)
digits
digits <- unlist(strsplit(cleaned, split = ""))
digits <- grepl("[0-9]", digits)
sum(digits)
digits <- unlist(strsplit(cleaned, split = ""))
digits2 <- grepl("[0-9]", digits)
sum(digits2)
digits
digits <- unlist(strsplit(cleaned, split = ""))
digits2 <- grepl("[0-9]", digits)
sum(digits2)
punct <- unlist(strsplit(cleaned, split = ""))
punct2 <- grepl("[[:punct:]]", punct)
sum(punct2)
out <- strsplit(lines, split = " ")
empty = c()
for (i in 1: length(1) ){
filled = append(empty, length(out[[i]])) }
table(filled)
out <- strsplit(lines, split = " ")
empty = c()
for (i in line: length(lines) ){
count = length(line[[i]])
filled = append(empty, count)
}
out <- strsplit(lines, split = " ")
empty = c()
for (row in out: length(out) ){
count = length(out[[i]])
filled = append(empty, count)
}
out
out <- strsplit(lines, split = " ")
empty = c()
for (row in out) {
count = length(row)
filled = append(empty, count)
}
table(filled)
out <- strsplit(lines, split = " ")
empty = c()
for (row in out) {
count = length(row)
filled = append(empty, count)
}
table(filled)
count
out <- strsplit(lines, split = " ")
empty = c()
for (row in length(out)) {
count = length(row)
filled = append(empty, count)
}
table(filled)
out <- strsplit(lines, split = " ")
empty = c()
for (ii in 1: length(lines) ){
filled = append(length(out[[ii]]))
}
out <- strsplit(lines, split = " ")
empty = c()
for (ii in 1: length(lines) ){
count = length(out[[ii]])
filled = append(empty, count)
}
filled
out <- strsplit(lines, split = " ")
empty = c()
for (ii in 1: length(lines) ){
count = length(out[[ii]])
filled = append(empty, count)
}
table(filled)
library(shiny); runApp('carnegie mellon - r shiny/Class-2/apps/ui_05.R')
runApp('carnegie mellon - r shiny/Class-2/apps/movies_13.R')
runApp('carnegie mellon - r shiny/Class-3/apps/hist_med.R')
runApp('carnegie mellon - r shiny/Class-3/apps/starwars_04.R')
library(flexdashboard)
library(shiny)
library(ggplot2)
library(dplyr)
library(shinydashboard)
load('macro_data.rdata')
setwd("~/carnegie mellon - r shiny/hw2blwallac/hw2-blwallac")
library(flexdashboard)
library(shiny)
library(ggplot2)
library(dplyr)
library(shinydashboard)
load('macro_data.rdata')
knitr::opts_chunk$set(echo = TRUE)
mean(macro_data$`MONTHLY HOME SUPPLY`)
mean(macro_data$`MED HOUSEHOLD INCOME`)
mean(macro_data$`MONTHLY HOME SUPPLY`)
mean(macro_data$`MED HOUSEHOLD INCOME`)
updated <- drop(is.na(macro_data$`MED HOUSEHOLD INCOME`))
mean(updated$`MED HOUSEHOLD INCOME`)
head(macro_data)
head(macro_data$`MED HOUSEHOLD INCOME`)
mean(macro_data$`MED HOUSEHOLD INCOME`)
mean(macro_data$`MED HOUSEHOLD INCOME`, na.rm=TRUE)
ggplot(data = macro_data, aes(x = `DATE`, y = `INFLATION(%)`)) +
geom_line(color="black", size = 0.5) +
scale_x_date(date_breaks = "years" , date_labels = "%Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Inflation Rate over Time", x = "Date", y = "Inflation (%)")
ggplot(data = macro_data, aes(x = `DATE`, y = `INFLATION(%)`)) +
geom_line(color="black", size = 0.5) +
scale_x_date(date_breaks = "years" , date_labels = "%Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_hline(yintercept= 2, color="orange", size=.5) +
labs(title = "Inflation Rate over Time", x = "Date", y = "Inflation (%)")
ggplot(data = macro_data, aes(x = `DATE`, y = `INFLATION(%)`)) +
geom_line(color="black", size = 0.5) +
scale_x_date(date_breaks = "years" , date_labels = "%Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_hline(yintercept= 2, color="orange", size=.5) +
annotate(geom="text", x=as.Date("2017-12-17"), y=4.936927429,
label="Bitcoin price reached 20k $\nat the end of 2017") +
annotate(geom="point", x=as.Date("2017-12-17"), y=4.936927429, size=5, shape=21, fill="transparent") +
labs(title = "Inflation Rate over Time", x = "Date", y = "Inflation (%)")
ggplot(data = macro_data, aes(x = `DATE`, y = `INFLATION(%)`)) +
geom_line(color="black", size = 0.5) +
scale_x_date(date_breaks = "years" , date_labels = "%Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_hline(yintercept= 2, color="orange", size=.5) +
annotate(geom="text", x=as.Date("2008-9-29"), y=4.936927429,
label="Bitcoin price reached 20k $\nat the end of 2017") +
annotate(geom="point", x=as.Date("2008-9-29"), y=4.936927429, size=5, shape=21, fill="transparent") +
labs(title = "Inflation Rate over Time", x = "Date", y = "Inflation (%)")
ggplot(data = macro_data, aes(x = `DATE`, y = `INFLATION(%)`)) +
geom_line(color="black", size = 0.5) +
scale_x_date(date_breaks = "years" , date_labels = "%Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_hline(yintercept= 2, color="orange", size=.5) +
annotate(geom="text", x=as.Date("2008-7-29"), y=4.936927429,
label="Bitcoin price reached 20k $\nat the end of 2017") +
annotate(geom="point", x=as.Date("2008-9-29"), y=4.936927429, size=5, shape=21, fill="transparent") +
labs(title = "Inflation Rate over Time", x = "Date", y = "Inflation (%)")
ggplot(data = macro_data, aes(x = `DATE`, y = `INFLATION(%)`)) +
geom_line(color="black", size = 0.5) +
scale_x_date(date_breaks = "years" , date_labels = "%Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_hline(yintercept= 2, color="orange", size=.5) +
annotate(geom="text", x=as.Date("2008-5-29"), y=4.936927429,
label="Bitcoin price reached 20k $\nat the end of 2017") +
annotate(geom="point", x=as.Date("2008-5-29"), y=4.936927429, size=5, shape=21, fill="transparent") +
labs(title = "Inflation Rate over Time", x = "Date", y = "Inflation (%)")
ggplot(data = macro_data, aes(x = `DATE`, y = `INFLATION(%)`)) +
geom_line(color="black", size = 0.5) +
scale_x_date(date_breaks = "years" , date_labels = "%Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_hline(yintercept= 2, color="orange", size=.5) +
annotate(geom="text", x=as.Date("2008-5-29"), y=4.936927429,
label="Bitcoin price reached 20k $\nat the end of 2017") +
annotate(geom="point", x=as.Date("2008-7-29"), y=4.936927429, size=5, shape=21, fill="transparent") +
labs(title = "Inflation Rate over Time", x = "Date", y = "Inflation (%)")
ggplot(data = macro_data, aes(x = `DATE`, y = `INFLATION(%)`)) +
geom_line(color="black", size = 0.5) +
scale_x_date(date_breaks = "years" , date_labels = "%Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_hline(yintercept= 2, color="orange", size=.5) +
annotate(geom="text", x=as.Date("2008-5-29"), y=4.936927429,
label="Bitcoin price reached 20k $\nat the end of 2017") +
annotate(geom="point", x=as.Date("2008-7-29"), y=5.1, size=5, shape=21, fill="transparent") +
labs(title = "Inflation Rate over Time", x = "Date", y = "Inflation (%)")
ggplot(data = macro_data, aes(x = `DATE`, y = `INFLATION(%)`)) +
geom_line(color="black", size = 0.5) +
scale_x_date(date_breaks = "years" , date_labels = "%Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_hline(yintercept= 2, color="orange", size=.5) +
annotate(geom="text", x=as.Date("2008-5-29"), y=4.936927429,
label="Bitcoin price reached 20k $\nat the end of 2017") +
annotate(geom="point", x=as.Date("2008-7-29"), y=5.5, size=5, shape=21, fill="transparent") +
labs(title = "Inflation Rate over Time", x = "Date", y = "Inflation (%)")
ggplot(data = macro_data, aes(x = `DATE`, y = `INFLATION(%)`)) +
geom_line(color="black", size = 0.5) +
scale_x_date(date_breaks = "years" , date_labels = "%Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_hline(yintercept= 2, color="orange", size=.5) +
annotate(geom="text", x=as.Date("2008-5-29"), y=7,
label="Bitcoin price reached 20k $\nat the end of 2017") +
annotate(geom="point", x=as.Date("2008-7-29"), y=5.5, size=5, shape=21, fill="transparent") +
labs(title = "Inflation Rate over Time", x = "Date", y = "Inflation (%)")
ggplot(data = macro_data, aes(x = `DATE`, y = `INFLATION(%)`)) +
geom_line(color="black", size = 0.5) +
scale_x_date(date_breaks = "years" , date_labels = "%Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_hline(yintercept= 2, color="orange", size=.5) +
annotate(geom="text", x=as.Date("2008-5-29"), y=7,
label="U.S. Stock Market Collapse of 2008") +
annotate(geom="point", x=as.Date("2008-7-29"), y=5.5, size=5, shape=21, fill="transparent") +
labs(title = "Inflation Rate over Time", x = "Date", y = "Inflation (%)")
ggplot(data = macro_data, aes(x = `DATE`, y = `INFLATION(%)`)) +
geom_line(color="black", size = 0.5) +
scale_x_date(date_breaks = "years" , date_labels = "%Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_hline(yintercept= 2, color="orange", size=.5) +
annotate(geom="text", x=as.Date("2008-5-29"), y=7,
label="U.S. Stock Market Collapse of 2008") +
annotate(geom="text", x=as.Date("2002-01-01"), y=3,
label="%2 Target Inflation Rate") +
annotate(geom="point", x=as.Date("2008-7-29"), y=5.5, size=5, shape=21, fill="transparent") +
labs(title = "Inflation Rate over Time", x = "Date", y = "Inflation (%)")
ggplot(data = macro_data, aes(x = `DATE`, y = `INFLATION(%)`)) +
geom_line(color="black", size = 0.5) +
scale_x_date(date_breaks = "years" , date_labels = "%Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_hline(yintercept= 2, color="orange", size=.5) +
annotate(geom="text", x=as.Date("2008-5-29"), y=7,
label="U.S. Stock Market Collapse of 2008") +
annotate(geom="text", x=as.Date("2003-01-01"), y=-2,
label="%2 Target Inflation Rate") +
annotate(geom="point", x=as.Date("2008-7-29"), y=5.5, size=5, shape=21, fill="transparent") +
labs(title = "Inflation Rate over Time", x = "Date", y = "Inflation (%)")
ggplot(data = macro_data, aes(x = `DATE`, y = `INFLATION(%)`)) +
geom_line(color="black", size = 0.5) +
scale_x_date(date_breaks = "years" , date_labels = "%Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_hline(yintercept= 2, color="orange", size=.5) +
annotate(geom="text", x=as.Date("2008-5-29"), y=7,
label="U.S. Stock Market Collapse of 2008") +
annotate(geom="text", x=as.Date("2004-01-01"), y=-1.5,
label="%2 Target Inflation Rate") +
annotate(geom="point", x=as.Date("2008-7-29"), y=5.5, size=5, shape=21, fill="transparent") +
labs(title = "Inflation Rate over Time", x = "Date", y = "Inflation (%)")
ggplot(data = macro_data, aes(x = `DATE`, y = `INFLATION(%)`)) +
geom_line(color="black", size = 0.5) +
scale_x_date(date_breaks = "years" , date_labels = "%Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_hline(yintercept= 2, color="orange", size=.5) +
annotate(geom="text", x=as.Date("2008-5-29"), y=7,
label="U.S. Stock Market Collapse of 2008") +
annotate(geom="point", x=as.Date("2008-7-29"), y=5.5, size=5, shape=21, fill="transparent") +
labs(title = "Inflation Rate over Time", x = "Date", y = "Inflation (%)")
ggplot(data = macro_data, aes(x = `DATE`, y = `CSUSHPISA`)) +
geom_line(color="black", linetype="dashed", size = 0.5) +
scale_x_date(date_breaks = "years" , date_labels = "%Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "U.S. National Home Price Index", x = "Date", y = "Home Price Index")
ggplot(data = macro_data, aes(x = `DATE`, y = `INFLATION(%)`)) +
geom_line(color="black", size = 0.5) +
scale_x_date(date_breaks = "years" , date_labels = "%Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_hline(yintercept= 2, color="orange", size=.5) +
annotate(geom="text", x=as.Date("2008-5-29"), y=7,
label="U.S. Stock Market Collapse of 2008") +
annotate(geom="point", x=as.Date("2008-7-29"), y=5.5, size=5, shape=21, fill="transparent") +
labs(title = "Inflation Rate over Time", x = "Date", y = "Inflation (%)")
ggplot(data = macro_data) +
geom_line(aes(x = `DATE`, y = `GDP PER CAPITA`), color = "black") +
geom_line(aes(x = `DATE`, y = `QUARTERLY GDP GROWTH RATE (%)`), color = "red") +
ggplot(data = macro_data, aes(x = `DATE`)) +
geom_line(aes(y = `GDP PER CAPITA`), color = "black") +
geom_line(aes(y = `QUARTERLY GDP GROWTH RATE (%)`), color = "red") +
ggplot(data = macro_data, aes(x = `DATE`)) +
geom_line(aes(y = `GDP PER CAPITA`), color = "black") +
geom_line(aes(y = `QUARTERLY GDP GROWTH RATE (%)`), color = "red")
ggplot(data = macro_data, aes(x = `DATE`)) +
geom_line(aes(y = `GDP PER CAPITA`), color = "black") +
geom_line(aes(y = `QUARTERLY REAL GDP`), color = "red")
ggplot(data = macro_data, aes(x = `DATE`)) +
geom_line(aes(y = `GDP PER CAPITA`), color = "black") +
geom_line(aes(y = `QUARTERLY REAL GDP`), color = "red") +
scale_x_date(date_breaks = "years" , date_labels = "'%y")
ggplot(data = macro_data, aes(x = `DATE`)) +
geom_line(aes(y = `GDP PER CAPITA`), color = "black") +
geom_line(aes(y = `QUARTERLY REAL GDP`), color = "red") +
scale_x_date(date_breaks = "years" , date_labels = "'%y") +
labs(title = "Gross Domestic Product", x = "Date", y = "GDP")
ggplot(data = macro_data, aes(x = `DATE`)) +
geom_line(aes(y = `GDP PER CAPITA`), color = "black") +
geom_line(aes(y = `QUARTERLY REAL GDP`), color = "red") +
scale_x_date(date_breaks = "years" , date_labels = "'%y") +
annotate(geom="text", x=as.Date("2008-5-29"), y=60000,
label="U.S. Stock Market Collapse of 2008") +
annotate(geom="text", x=as.Date("2012-5-29"), y=21000,
label="U.S. Stock Market Collapse of 2008") +
labs(title = "Gross Domestic Product", x = "Date", y = "GDP")
ggplot(data = macro_data, aes(x = `DATE`)) +
geom_line(aes(y = `GDP PER CAPITA`), color = "blue", size = 1.2) +
geom_line(aes(y = `QUARTERLY REAL GDP`), color = "red", , size = 1.2) +
scale_x_date(date_breaks = "years" , date_labels = "'%y") +
annotate(geom="text", x=as.Date("2008-5-29"), y=60000,
label="GDP Per Capita") +
annotate(geom="text", x=as.Date("2012-5-29"), y=21000,
label="U.S. Stock Market Collapse of 2008") +
labs(title = "Gross Domestic Product", x = "Date", y = "GDP")
ggplot(data = macro_data, aes(x = `DATE`)) +
geom_line(aes(y = `GDP PER CAPITA`), color = "blue", size = 1.2) +
geom_line(aes(y = `QUARTERLY REAL GDP`), color = "red", , size = 1.2) +
scale_x_date(date_breaks = "years" , date_labels = "'%y") +
annotate(geom="text", x=as.Date("2008-5-29"), y=60000,
label="GDP Per Capita") +
annotate(geom="text", x=as.Date("2012-5-29"), y=21000,
label="Quarterly Real GDP") +
labs(title = "Gross Domestic Product", x = "Date", y = "GDP")
library(flexdashboard)
library(shiny)
library(ggplot2)
library(dplyr)
library(DT)
load('macro_data.rdata')
acro_data$`TOO HOT` <- ifelse(acro_data$`INFLATION(%)` < 2, 0, 1)
acro_data$`TOO HOT` <- ifelse(macro_data$`INFLATION(%)` < 2, 0, 1)
macro_data$`TOO HOT` <- ifelse(macro_data$`INFLATION(%)` < 2, 0, 1)
summary(macro_data)
save(macro_data, file = "macro_data.rdata")
library(flexdashboard)
library(shiny)
library(ggplot2)
library(dplyr)
library(DT)
load('macro_data.rdata')
macro_subset7 <- reactive({
macro_data %>%
filter(
DATE >= input$Date_Picker[1],
DATE <= input$Date_Picker[2],
) %>%
filter(`DATE`, `INFLATION(%)`, `CORP. BOND YIELD(%)`, `GDP PER CAPITA`, `QUARTERLY REAL GDP`, `QUARTERLY GDP GROWTH RATE (%)`, `CPIALLITEMS`, `TOO HOT`)
})
output$data_table1 <- DT::renderDataTable({
DT::datatable(data = macro_subset7(),
options = list(pageLength = 10),
rownames = FALSE) %>%
formatStyle(`TOO HOT`, backgroundColor = styleEqual(c(0, 1), c('gray', 'red')))
})
save(macro_data, file = "macro_data.rdata")
DT::datatable(data = macro_data,
options = list(pageLength = 50),
rownames = FALSE) %>%
formatStyle('TOO HOT', target = 'row', backgroundColor = styleEqual(c(0, 1), c('lightskyblue', 'orangered')))
library(readr)
macro_data <- read_csv("~/carnegie mellon - r shiny/hw2blwallac/hw2-blwallac/us-macro-data-2002-2022.csv")
library(dplyr)
macro_data$DATE <- as.Date(macro_data$DATE, format = "%d/%m/%Y")
macro_data$YEAR <- format(macro_data$DATE, "%Y")
macro_data$YEAR <- as.numeric(macro_data$YEAR)
macro_data$QUARTERS <- quarters(macro_data$DATE)
macro_data$`TOO HOT` <- ifelse(macro_data$`INFLATION(%)` < 2, 0, 1)
summary(macro_data)
DT::datatable(data = macro_data,
options = list(pageLength = 50),
rownames = FALSE) %>%
formatStyle('TOO HOT', target = 'row', backgroundColor = styleEqual(c(0, 1), c('lightskyblue', 'orangered')))
